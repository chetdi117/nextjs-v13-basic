{
  "env": {
    "browser": true,
    "es2021": true,
    "jest": true
  },
  "extends": ["eslint:recommended", "plugin:@typescript-eslint/recommended"],
  "overrides": [],
  "parser": "@typescript-eslint/parser",
  "parserOptions": {
    "ecmaVersion": "latest",
    "sourceType": "module"
  },
  "plugins": ["@typescript-eslint", "simple-import-sort"],
  "rules": {
    "@typescript-eslint/naming-convention": [
      "error",
      {
        "selector": "default",
        "format": ["camelCase"],
        "leadingUnderscore": "allow",
        "trailingUnderscore": "allow"
      },
      {
        "selector": "variable",
        "format": ["camelCase", "UPPER_CASE"],
        "leadingUnderscore": "allow",
        "trailingUnderscore": "allow"
      },
      {
        "selector": "typeLike",
        "format": ["PascalCase"]
      },
      {
        "selector": "enumMember",
        "format": ["PascalCase"],
        "leadingUnderscore": "allow",
        "trailingUnderscore": "allow"
      }
    ],
    "@typescript-eslint/member-ordering": [
      "error",
      {
        "default": [
          // Index signature
          "signature",
          "call-signature",

          // Fields
          "public-static-field",
          "protected-static-field",
          "private-static-field",
          "#private-static-field",

          "public-decorated-field",
          "protected-decorated-field",
          "private-decorated-field",

          "public-instance-field",
          "protected-instance-field",
          "private-instance-field",
          "#private-instance-field",

          "public-abstract-field",
          "protected-abstract-field",

          "public-field",
          "protected-field",
          "private-field",
          "#private-field",

          "static-field",
          "instance-field",
          "abstract-field",

          "decorated-field",

          "field",

          // Static initialization
          "static-initialization",

          // Constructors
          "public-constructor",
          "protected-constructor",
          "private-constructor",

          "constructor",

          // Accessors
          "public-static-accessor",
          "protected-static-accessor",
          "private-static-accessor",
          "#private-static-accessor",

          "public-decorated-accessor",
          "protected-decorated-accessor",
          "private-decorated-accessor",

          "public-instance-accessor",
          "protected-instance-accessor",
          "private-instance-accessor",
          "#private-instance-accessor",

          "public-abstract-accessor",
          "protected-abstract-accessor",

          "public-accessor",
          "protected-accessor",
          "private-accessor",
          "#private-accessor",

          "static-accessor",
          "instance-accessor",
          "abstract-accessor",

          "decorated-accessor",

          "accessor",

          // Getters
          "public-static-get",
          "protected-static-get",
          "private-static-get",
          "#private-static-get",

          "public-decorated-get",
          "protected-decorated-get",
          "private-decorated-get",

          "public-instance-get",
          "protected-instance-get",
          "private-instance-get",
          "#private-instance-get",

          "public-abstract-get",
          "protected-abstract-get",

          "public-get",
          "protected-get",
          "private-get",
          "#private-get",

          "static-get",
          "instance-get",
          "abstract-get",

          "decorated-get",

          "get",

          // Setters
          "public-static-set",
          "protected-static-set",
          "private-static-set",
          "#private-static-set",

          "public-decorated-set",
          "protected-decorated-set",
          "private-decorated-set",

          "public-instance-set",
          "protected-instance-set",
          "private-instance-set",
          "#private-instance-set",

          "public-abstract-set",
          "protected-abstract-set",

          "public-set",
          "protected-set",
          "private-set",
          "#private-set",

          "static-set",
          "instance-set",
          "abstract-set",

          "decorated-set",

          "set",

          // Methods
          "public-static-method",
          "protected-static-method",
          "private-static-method",
          "#private-static-method",

          "public-decorated-method",
          "protected-decorated-method",
          "private-decorated-method",

          "public-instance-method",
          "protected-instance-method",
          "private-instance-method",
          "#private-instance-method",

          "public-abstract-method",
          "protected-abstract-method",

          "public-method",
          "protected-method",
          "private-method",
          "#private-method",

          "static-method",
          "instance-method",
          "abstract-method",

          "decorated-method",

          "method"
        ]
      }
    ],
    "no-undef": "error", // Disallow using undeclared variables
    "no-extra-semi": "error", // Disallow unnecessary semicolons
    "no-console": "error", // Disallow the use of console statements
    "no-debugger": "error", // Disallow the use of debugger statements
    "no-alert": "error", // Disallow the use of alert, confirm, and prompt
    "no-eval": "error", // Disallow the use of eval()
    "no-multi-spaces": "error", // Disallow multiple spaces
    "no-trailing-spaces": "error", // Disallow trailing spaces
    "no-var": "error", // Require using let or const instead of var
    "prefer-const": "error", // Require using const for variables that are not reassigned
    "quotes": ["error", "single"], // Require single quotes
    "indent": ["error", 2, { "SwitchCase": 1 }], // Require 2 spaces for indentation
    "comma-spacing": "error", // Require spacing after commas
    "comma-style": ["error", "last"], // Require comma placement at the end of the line
    "object-curly-spacing": ["error", "always"], // Require spacing inside object curly braces
    "array-bracket-spacing": ["error", "never"], // Disallow spacing inside array brackets
    "array-element-newline": [
      "error",
      {
        "ArrayExpression": "consistent"
      }
    ],
    "semi": ["error", "always"], // Require semicolons at the end of statements
    "no-multiple-empty-lines": [
      "error",
      {
        "max": 1
      }
    ], // Disallow multiple empty lines
    "arrow-spacing": "error", // Require spacing around arrow functions
    "lines-between-class-members": ["error", "always", { "exceptAfterSingleLine": true }],
    "simple-import-sort/imports": [
      "error",
      {
        "groups": [
          // Side effect imports.
          ["^\\u0000"],
          // Node.js builtins prefixed with `node:`.
          ["^node:"],
          // Packages.
          // Things that start with a letter (or digit or underscore), or `@` followed by a letter.
          ["^@?\\w"],
          // Absolute imports
          // Things that start with @app/. Examples: import { CoreModule } from "@app/core";
          ["^@app?\\w"],
          // Absolute imports and other imports such as Vue-style `@/foo`.
          // Anything not matched in another group.
          ["^"],
          // Relative imports.
          // Anything that starts with a dot.
          ["^\\."]
        ]
      }
    ],
    "simple-import-sort/exports": "error"
  }
}
